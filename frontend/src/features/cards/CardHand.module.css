/* Card Hand Container */
.handContainer {
  position: relative;
  width: 100%;
  min-height: 200px;
  background-color: rgba(17, 24, 39, 0.3);
  border-radius: 0.5rem;
  padding: 1rem;
}

/* Hand Header */
.handHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.handTitle {
  font-size: 1.125rem;
  font-weight: 600;
  color: white;
}

.handCount {
  font-size: 0.875rem;
  color: rgb(156, 163, 175);
}

/* Cards Container */
.cardsContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  justify-content: center;
}

/* Card Styles */
.card {
  position: relative;
  width: 10rem;
  height: 14rem;
  border-radius: 0.5rem;
  padding: 0.75rem;
  cursor: pointer;
  transition: all 0.2s;
  display: flex;
  flex-direction: column;
  background-color: rgba(31, 41, 55, 0.8);
  border: 2px solid;
}

.card:hover {
  transform: scale(1.02) translateY(-0.5rem);
}

.card.selected {
  transform: scale(1.05) translateY(-1rem);
  z-index: 10;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.card.disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* Card Rarity Colors */
.rarityCommon {
  border-color: rgb(156, 163, 175);
}

.rarityUncommon {
  border-color: rgb(34, 197, 94);
}

.rarityRare {
  border-color: rgb(59, 130, 246);
}

.rarityEpic {
  border-color: rgb(168, 85, 247);
}

.rarityLegendary {
  border-color: rgb(234, 179, 8);
}

/* Card Type Colors */
.typeCharacter {
  background-color: rgba(30, 58, 138, 0.5);
}

.typeAction {
  background-color: rgba(153, 27, 27, 0.5);
}

.typeUpgrade {
  background-color: rgba(22, 101, 52, 0.5);
}

.typeTactic {
  background-color: rgba(126, 34, 206, 0.5);
}

/* Card Elements */
.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

.cardName {
  font-weight: 700;
  color: white;
  font-size: 0.875rem;
  margin: 0;
}

.cardCost {
  background-color: rgb(234, 179, 8);
  color: black;
  font-size: 0.75rem;
  font-weight: 700;
  padding: 0.125rem 0.5rem;
  border-radius: 0.25rem;
}

.cardArt {
  background-color: rgba(55, 65, 81, 0.5);
  border-radius: 0.25rem;
  height: 5rem;
  margin: 0.5rem 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.cardArtPlaceholder {
  color: rgb(156, 163, 175);
  font-size: 0.75rem;
}

.cardType {
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  color: rgb(209, 213, 219);
  margin-bottom: 0.25rem;
}

.cardDescription {
  font-size: 0.75rem;
  color: rgb(209, 213, 219);
  margin-bottom: 0.5rem;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  line-clamp: 3; /* standard property for compatibility */
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.abilitiesContainer {
  margin-top: auto;
  padding-top: 0.5rem;
  border-top: 1px solid rgb(55, 65, 81);
}

.abilitiesList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
}

.abilityBadge {
  font-size: 0.625rem;
  background-color: rgba(55, 65, 81, 0.5);
  color: rgb(229, 231, 235);
  padding: 0.125rem 0.5rem;
  border-radius: 0.25rem;
}

/* Hover Effect */
.hoverEffect {
  position: absolute;
  inset: 0;
  border-radius: 0.5rem;
  opacity: 0;
  background-color: white;
  transition: opacity 0.2s;
  pointer-events: none;
}

.card:hover .hoverEffect {
  opacity: 0.2;
}

/* Empty State */
.emptyState {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 12rem;
  background-color: rgba(17, 24, 39, 0.5);
  border-radius: 0.5rem;
  border: 2px dashed rgb(55, 65, 81);
}

.emptyText {
  color: rgb(107, 114, 128);
}

/* Card Back (Visual Effect) */
.cardBack {
  position: absolute;
  bottom: -1rem;
  right: -1rem;
  width: 8rem;
  height: 12rem;
  background-color: rgb(31, 41, 55);
  border: 2px solid rgb(55, 65, 81);
  border-radius: 0.5rem;
  transform: rotate(6deg);
  opacity: 0.3;
}

/* Dynamic transform helpers using CSS variables */
.cardTransform {
  transform: rotate(var(--rot, 0deg)) translateY(var(--y, 0px)) scale(var(--scale, 1));
  transform-origin: bottom center;
}

.cardLayer {
  z-index: var(--z, 1);
}
