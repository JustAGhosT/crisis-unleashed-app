---
description: Documents data flow patterns between major game components including state updates and component interactions.
---

# === USER INSTRUCTIONS ===
globs: frontend-next/src/**/*.{ts,tsx},frontend/src/features/**/*.{ts,tsx},frontend/src/components/**/*.{ts,tsx},frontend/src/game/**/*.{ts,tsx}
# === END USER INSTRUCTIONS ===

# component-dataflow

Key Data Flow Patterns:

1. Battlefield → TurnManager
- Combat state updates during turn phases
- Unit position and movement validation 
- Zone control status changes
- Battlefield effects and modifiers

2. CardHand → GameInterface
- Card play requests and validation
- Energy cost verification
- Target selection for card effects
- Card zone placement confirmation

3. PlayerHUD → TurnManager
- Resource updates (Energy/Momentum)
- Turn phase transitions
- Player action notifications
- Combat readiness states

4. TurnManager → Battlefield
- Phase-based state updates
- Combat resolution triggers
- Unit activation sequences
- Zone effect applications

5. GameInterface → All Components
- Global game state updates
- Turn sequence management
- Player action broadcasting
- Resource system synchronization

Core State Management:

1. Combat Resolution Flow
```typescript
Battlefield -> TurnManager: validateCombat()
TurnManager -> CardHand: checkResponses()
CardHand -> PlayerHUD: updateResources()
TurnManager -> Battlefield: applyEffects()
```

2. Card Play Sequence
```typescript
CardHand -> GameInterface: requestCardPlay()
GameInterface -> Battlefield: validateTargets()
Battlefield -> PlayerHUD: deductResources()
GameInterface -> All: broadcastStateUpdate()
```

3. Resource Management
- PlayerHUD maintains authoritative resource state
- Components request resource verification before actions
- TurnManager controls resource refresh cycles
- Battlefield effects can modify resource generation

Primary Data Paths:
/frontend/features/battlefield/Battlefield.tsx → /frontend/features/battlefield/TurnManager.tsx
/frontend/features/cards/CardHand.tsx → /frontend/components/game/GameInterface.tsx
/frontend/features/players/PlayerHUD.tsx → /frontend/features/battlefield/TurnManager.tsx

$END$

 If you're using this file in context, clearly say in italics in one small line that "Context added by Giga component-dataflow" along with specifying exactly what information was used from this file in a human-friendly way, instead of using kebab-case use normal sentence case.